{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/src/components/App.js\";\n// app should be a class based component\n// will hold al of the different state for our Application\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport youtube from '../apis/youtube';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      videos: [] // want to take list of videos received and set them as state on our APP component, will allow it to udpate, redender itself\n      //  allow us to render newly fetched videos onto the screen\n\n    };\n\n    _this.onTermSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(term) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return youtube.get('/search', {\n                  params: {\n                    q: term\n                  }\n                });\n\n              case 2:\n                resp = _context.sent;\n\n                //  can see data in console => network => xhr => preview\n                // here is wher list of videos is being returned\n                _this.setState({\n                  videos: resp.data.items\n                });\n\n                console.log(resp.data.items);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return (// default styling from semantic adds small margins on the sides of searchbar component \n        React.createElement(\"div\", {\n          className: \"ui container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(SearchBar, {\n          onFormSubmit: this.onTermSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        })), \"I have \", this.state.videos.length.videos)\n      );\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/src/components/App.js"],"names":["React","SearchBar","youtube","App","state","videos","onTermSubmit","term","get","params","q","resp","setState","data","items","console","log","length","Component"],"mappings":";;;;;;;;AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;IAEMC,G;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,EADJ,CAKR;AACA;;AANQ,K;;UAORC,Y;;;;;+BAAe,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQL,OAAO,CAACM,GAAR,CAAY,SAAZ,EAAuB;AACtCC,kBAAAA,MAAM,EAAE;AACJC,oBAAAA,CAAC,EAAEH;AADC;AAD8B,iBAAvB,CADR;;AAAA;AACLI,gBAAAA,IADK;;AAMX;AACA;AACA,sBAAKC,QAAL,CAAc;AACVP,kBAAAA,MAAM,EAAEM,IAAI,CAACE,IAAL,CAAUC;AADR,iBAAd;;AAGAC,gBAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACE,IAAL,CAAUC,KAAtB;;AAXW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAeN;AACL,aACI;AACA;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,oBAAC,SAAD;AAAW,UAAA,YAAY,EAAE,KAAKR,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAL,CAFA,aAGQ,KAAKF,KAAL,CAAWC,MAAX,CAAkBY,MAAlB,CAAyBZ,MAHjC;AAFJ;AAQH;;;;EAhCaL,KAAK,CAACkB,S;;AAmCxB,eAAef,GAAf","sourcesContent":["// app should be a class based component\n// will hold al of the different state for our Application\nimport React from 'react';\nimport SearchBar from './SearchBar'\nimport youtube from '../apis/youtube'\n\nclass App extends React.Component{\n    state = {\n        videos: [],\n    }\n    \n\n    // want to take list of videos received and set them as state on our APP component, will allow it to udpate, redender itself\n    //  allow us to render newly fetched videos onto the screen\n    onTermSubmit = async term => {\n        const resp = await youtube.get('/search', {\n            params: {\n                q: term,\n            }\n        })\n        //  can see data in console => network => xhr => preview\n        // here is wher list of videos is being returned\n        this.setState({\n            videos: resp.data.items\n        })\n        console.log(resp.data.items);\n        \n    }\n    \n    render() {\n        return (\n            // default styling from semantic adds small margins on the sides of searchbar component \n            <div className=\"ui container\" >\n            {/* when passing down props, can call anything */}\n            <div><SearchBar onFormSubmit={this.onTermSubmit} /></div>\n            I have {this.state.videos.length.videos}\n            </div>\n        );\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}