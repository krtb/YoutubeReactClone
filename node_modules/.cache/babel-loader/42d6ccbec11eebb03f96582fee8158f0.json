{"ast":null,"code":"import _classCallCheck from \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/src/components/SearchBar.js\";\nimport React from 'react';\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBar, _React$Component);\n\n  function SearchBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      term: ''\n    };\n\n    _this.onChange = function () {};\n\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ui segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"ui form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Video Search\"), React.createElement(\"input\", {\n        value: this.state.term,\n        onChange: this.onInputChange,\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/kurt/Development/practiceApps/reactRedux-PA-S/videos/src/components/SearchBar.js"],"names":["React","SearchBar","state","term","onChange","onInputChange","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,S;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE;AADF,K;;UAIRC,Q,GAAW,YAAM,CAEhB,C;;;;;;;6BAEO;AACJ,aAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAII;AAAO,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAAzB;AAA+B,QAAA,QAAQ,EAAE,KAAKE,aAA9C;AAA6D,QAAA,IAAI,EAAC,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ,CADJ,CAFJ;AAcH;;;;EAzBmBL,KAAK,CAACM,S;;AA4B9B,eAAeL,SAAf","sourcesContent":["import React from 'react';\n\nclass SearchBar extends React.Component{\n    // C.C. Step 1 = create default state value searchbard will have at the start\n    state = {\n        term: '',\n    }\n\n    onChange = () => {\n\n    }\n\n    render(){\n        return(\n            \n            <div className=\"ui segment\">\n                <form className=\"ui form\" >\n                    <div className=\"field\" >\n                        <label>Video Search</label>\n                        {/* add default value from state to display on first render */}\n                        {/* adding in onChange callback method, that will eventually pass data to SearchBar callback */}\n                        <input value={this.state.term} onChange={this.onInputChange} type=\"text\" ></input>\n                    </div>\n                </form>\n            </div>\n            \n        );\n    }\n}\n\nexport default SearchBar\n"]},"metadata":{},"sourceType":"module"}